global hd
clearvars -except hd

IMG = hd.Images{1} ;
seedNumber = 2 ;
refConfig = 'Nodes' ; % Reference configuration: 'Nodes' (as meshed) or 'Current' (uses preceding computed displacement)

[nI,nJ,nC,nFr] = size(IMG) ;
[JJ,II] = meshgrid(1:nJ,1:nI) ;

globalDIC_02_0_ProcessSeed ;
%%
convFilt = @(I)conv2(I,ones(1),'same') ;
UU = @(ii,comp)MAPPING*(hd.Seeds(seedNumber).MovingPoints(:,comp,ii)-hd.Seeds(seedNumber).MovingPoints(:,comp,1)) ;
resImg  = @(ii)interp2(JJ,II,IMG(:,:,:,ii),JJ(indDomain)+UU(ii,1),II(:)+UU(ii,2),'linear',0) ;
diffImg = @(ii)resImg(ii) ;
%diffImg = @(ii)abs(IMG(:,:,:,ii)-IMG(:,:,:,ii-1)) ;

clf
    im = imagesc(IMG(:,:,:,1)) ;
        axis ij
        axis equal
        axis tight
        set(gca,'xtick',[],'ytick',[])
    slider = uicontrol(gcf ...
                ,'style','slider' ...
                ,'Units','normalized' ...
                ,'position',[0 0 1 0.025] ...
                ,'min',2 ...
                ,'max',size(IMG,4) ...
                ,'SliderStep',[1/(size(IMG,4)-1) 1/10] ...
                ...,'callback',@(src,evt)set(im,'CData',diffImg(round(src.Value))) ...
                ) ;
    addlistener(slider,'Value','PostSet',@(src,evt)set(im,'CData',diffImg(round(slider.Value)))) ;
    slider.Value = 2 ;
    
    