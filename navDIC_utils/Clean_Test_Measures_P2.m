global P2_Measures;

%% SENSITIVITY VALUES
forceS = 44.8;
dispS = 7.5;
LVDT_Supports_S = 2.5;
LVDT_MidSpan_S = 5.0;

%% DATA ACQ. FREQUENCIES
filterSpan = 1000; %DAQ
filterSpan_2 = 30; %OptiTracks

%% INITIALIZATION
P2_Measures.AcquiredData = [];
P2_Measures.AcquiredData.Data = [];
P2_Measures.AcquiredData.FilteredData = [];
P2_Measures.AcquiredData.InterpData = [];
P2_Measures.AcquiredData.InterpFilteredData = [];
P2_Measures.AcquiredData.Time = [];
P2_Measures.AcquiredData.StartTime = [];
P2_Measures.AcquiredOTPositions = [];
P2_Measures.AcquiredOTPositions.Data = [];
P2_Measures.AcquiredOTPositions.FilteredData = [];
P2_Measures.AcquiredOTPositions.InterpData = [];
P2_Measures.AcquiredOTPositions.InterpFilteredData = [];
P2_Measures.AcquiredOTPositions.InterpID = [];
P2_Measures.AcquiredOTPositions.Time = [];
P2_Measures.AcquiredOTPositions.ID = [];
P2_Measures.TimeLine = [];
P2_Measures.CommonTimeLine = [];
temp_Measures = [];
temp_Measures.Data = [];
temp_Measures.Time = [];

%% CUT THE DATAS WHEN ....time(end) IS DIFFERENT FOR SENSORS AND OT

[tMin_1, i1] = min([hd_1.AcquiredData.Time(end) - hd_1.AcquiredData.Time(1), ...
             hd_1.AcquiredOTPositions.Time(end) - hd_1.AcquiredOTPositions.Time(1)]);
         
[tMin_2, i2] = min([hd_2.AcquiredData.Time(end) - hd_2.AcquiredData.Time(1), ...
             hd_2.AcquiredOTPositions.Time(end) - hd_2.AcquiredOTPositions.Time(1)]);
 
[tMin_3, i3] = min([hd_3.AcquiredData.Time(end) - hd_3.AcquiredData.Time(1), ...
              hd_3.AcquiredOTPositions.Time(end) - hd_3.AcquiredOTPositions.Time(1)]);
          
[tMin_4, i4] = min([hd_4.AcquiredData.Time(end) - hd_4.AcquiredData.Time(1), ...
              hd_4.AcquiredOTPositions.Time(end) - hd_4.AcquiredOTPositions.Time(1)]);
          
[tMin_5, i5] = min([hd_5.AcquiredData.Time(end) - hd_5.AcquiredData.Time(1), ...
              hd_5.AcquiredOTPositions.Time(end) - hd_5.AcquiredOTPositions.Time(1)]);
          
[tMin_6, i6] = min([hd_6.AcquiredData.Time(end) - hd_6.AcquiredData.Time(1), ...
              hd_6.AcquiredOTPositions.Time(end) - hd_6.AcquiredOTPositions.Time(1)]);
          
[tMin_7, i7] = min([hd_7.AcquiredData.Time(end) - hd_7.AcquiredData.Time(1), ...
              hd_7.AcquiredOTPositions.Time(end) - hd_7.AcquiredOTPositions.Time(1)]);

if (hd_1.AcquiredOTPositions.Time(end) - hd_1.AcquiredOTPositions.Time(1) ...
            ~= hd_1.AcquiredData.Time(end) - hd_1.AcquiredData.Time(1))
        if i1 == 1
            longestTimeStamps = hd_1.AcquiredOTPositions.Time ...
                                - hd_1.AcquiredOTPositions.Time(1);
            maxTimeIndex_1 = find((longestTimeStamps - tMin_1)>0);
            t1_1 = hd_1.AcquiredOTPositions.Time(maxTimeIndex_1(1) - 1) ... 
                   - hd_1.AcquiredOTPositions.Time(1);
            t1_2 = hd_1.AcquiredOTPositions.Time(maxTimeIndex_1(1)) ... 
                   - hd_1.AcquiredOTPositions.Time(1);
            hd_1.AcquiredOTPositions.Time = ...
                hd_1.AcquiredOTPositions.Time(1:maxTimeIndex_1(1));
            hd_1.AcquiredOTPositions.Time(end) = tMin_1 ...
                            + hd_1.AcquiredOTPositions.Time(1) ;
        else
            longestTimeStamps = hd_1.AcquiredData.Time ...
                                - hd_1.AcquiredData.Time(1);
            maxTimeIndex_1 = find((longestTimeStamps - tMin_1)>0);
            t1_1 = hd_1.AcquiredData.Time(maxTimeIndex_1(1) - 1) ... 
                   - hd_1.AcquiredData.Time(1);
            t1_2 = hd_1.AcquiredData.Time(maxTimeIndex_1(1)) ... 
                   - hd_1.AcquiredData.Time(1);
            hd_1.AcquiredData.Time = ...
                hd_1.AcquiredData.Time(1:maxTimeIndex_1(1));
            hd_1.AcquiredData.Time(end) = tMin_1 ...
                            + hd_1.AcquiredData.Time(1);
        end
end

if (hd_2.AcquiredOTPositions.Time(end) - hd_2.AcquiredOTPositions.Time(1) ...
            ~= hd_2.AcquiredData.Time(end) - hd_2.AcquiredData.Time(1))
        if i2 == 1
            longestTimeStamps = hd_2.AcquiredOTPositions.Time ...
                                - hd_2.AcquiredOTPositions.Time(1);
            maxTimeIndex_2 = find((longestTimeStamps - tMin_2)>0);
            t2_1 = hd_2.AcquiredOTPositions.Time(maxTimeIndex_2(1) - 1) ... 
                   - hd_2.AcquiredOTPositions.Time(1);
            t2_2 = hd_2.AcquiredOTPositions.Time(maxTimeIndex_2(1)) ... 
                   - hd_2.AcquiredOTPositions.Time(1);
            hd_2.AcquiredOTPositions.Time = ...
                hd_2.AcquiredOTPositions.Time(1:maxTimeIndex_2(1));
            hd_2.AcquiredOTPositions.Time(end) = tMin_2 ...
                            + hd_2.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_2.AcquiredData.Time ... 
                                - hd_2.AcquiredData.Time(1);
            maxTimeIndex_2 = find((longestTimeStamps - tMin_2)>0);
            t2_1 = hd_2.AcquiredData.Time(maxTimeIndex_2(1) - 1) ... 
                   - hd_2.AcquiredData.Time(1);
            t2_2 = hd_1.AcquiredData.Time(maxTimeIndex_2(1)) ... 
                   - hd_2.AcquiredData.Time(1);
            hd_2.AcquiredData.Time = ...
                hd_2.AcquiredData.Time(1:maxTimeIndex_2(1));
            hd_2.AcquiredData.Time(end) = tMin_2 ...
                            + hd_2.AcquiredData.Time(1);
        end
end

if (hd_3.AcquiredOTPositions.Time(end) - hd_3.AcquiredOTPositions.Time(1) ...
            ~= hd_3.AcquiredData.Time(end) - hd_3.AcquiredData.Time(1))
        if i3 == 1
            longestTimeStamps = hd_3.AcquiredOTPositions.Time ...
                                - hd_3.AcquiredOTPositions.Time(1);
            maxTimeIndex_3 = find((longestTimeStamps - tMin_3)>0);
            t3_1 = hd_3.AcquiredOTPositions.Time(maxTimeIndex_3(1) - 1) ... 
                   - hd_3.AcquiredOTPositions.Time(1);
            t3_2 = hd_3.AcquiredOTPositions.Time(maxTimeIndex_3(1)) ... 
                   - hd_3.AcquiredOTPositions.Time(1);
            hd_3.AcquiredOTPositions.Time = ...
                hd_3.AcquiredOTPositions.Time(1:maxTimeIndex_3(1));
            hd_3.AcquiredOTPositions.Time(end) = tMin_3 ...
                            + hd_3.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_3.AcquiredData.Time ...
                                - hd_3.AcquiredData.Time(1);
            maxTimeIndex_3 = find((longestTimeStamps - tMin_3)>0);
            t3_1 = hd_3.AcquiredData.Time(maxTimeIndex_3(1) - 1) ... 
                   - hd_3.AcquiredData.Time(1);
            t3_2 = hd_3.AcquiredData.Time(maxTimeIndex_3(1)) ... 
                   - hd_3.AcquiredData.Time(1);
            hd_3.AcquiredData.Time = ...
                hd_3.AcquiredData.Time(1:maxTimeIndex_3(1));
            hd_3.AcquiredData.Time(end) = tMin_3 ...
                            + hd_3.AcquiredData.Time(1);
        end
end

if (hd_4.AcquiredOTPositions.Time(end) - hd_4.AcquiredOTPositions.Time(1) ...
            ~= hd_4.AcquiredData.Time(end) - hd_4.AcquiredData.Time(1))
        if i4 == 1
            longestTimeStamps = hd_4.AcquiredOTPositions.Time ...
                                - hd_4.AcquiredOTPositions.Time(1);
            maxTimeIndex_4 = find((longestTimeStamps - tMin_4)>0);
            t4_1 = hd_4.AcquiredOTPositions.Time(maxTimeIndex_4(1) - 1) ... 
                   - hd_4.AcquiredOTPositions.Time(1);
            t4_2 = hd_4.AcquiredOTPositions.Time(maxTimeIndex_4(1)) ... 
                   - hd_4.AcquiredOTPositions.Time(1);
            hd_4.AcquiredOTPositions.Time = ...
                hd_4.AcquiredOTPositions.Time(1:maxTimeIndex_4(1));
            hd_4.AcquiredOTPositions.Time(end) = tMin_4 ...
                            + hd_4.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_4.AcquiredData.Time ...
                                - hd_4.AcquiredData.Time(1);
            maxTimeIndex_4 = find((longestTimeStamps - tMin_4)>0);
            t4_1 = hd_4.AcquiredData.Time(maxTimeIndex_4(1) - 1) ... 
                   - hd_4.AcquiredData.Time(1);
            t4_2 = hd_4.AcquiredData.Time(maxTimeIndex_4(1)) ... 
                   - hd_4.AcquiredData.Time(1);
            hd_4.AcquiredData.Time = ...
                hd_4.AcquiredData.Time(1:maxTimeIndex_4(1));
            hd_4.AcquiredData.Time(end) = tMin_4 ...
                            + hd_4.AcquiredData.Time(1);
        end
end

if (hd_5.AcquiredOTPositions.Time(end) - hd_5.AcquiredOTPositions.Time(1) ...
            ~= hd_5.AcquiredData.Time(end) - hd_5.AcquiredData.Time(1))
        if i5 == 1
            longestTimeStamps = hd_5.AcquiredOTPositions.Time ...
                                - hd_5.AcquiredOTPositions.Time(1);
            maxTimeIndex_5 = find((longestTimeStamps - tMin_5)>0);
            t5_1 = hd_5.AcquiredOTPositions.Time(maxTimeIndex_5(1) - 1) ... 
                   - hd_5.AcquiredOTPositions.Time(1);
            t5_2 = hd_5.AcquiredOTPositions.Time(maxTimeIndex_5(1)) ... 
                   - hd_5.AcquiredOTPositions.Time(1);
            hd_5.AcquiredOTPositions.Time = ...
                hd_5.AcquiredOTPositions.Time(1:maxTimeIndex_5(1));
            hd_5.AcquiredOTPositions.Time(end) = tMin_5 ...
                            + hd_5.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_5.AcquiredData.Time ...
                                - hd_5.AcquiredData.Time(1);
            maxTimeIndex_5 = find((longestTimeStamps - tMin_5)>0);
            t5_1 = hd_5.AcquiredData.Time(maxTimeIndex_5(1) - 1) ... 
                   - hd_5.AcquiredData.Time(1);
            t5_2 = hd_5.AcquiredData.Time(maxTimeIndex_5(1)) ... 
                   - hd_5.AcquiredData.Time(1);
            hd_5.AcquiredData.Time = ...
                hd_5.AcquiredData.Time(1:maxTimeIndex_5(1));
            hd_5.AcquiredData.Time(end) = tMin_5 ...
                            + hd_5.AcquiredData.Time(1);
        end

end

if (hd_6.AcquiredOTPositions.Time(end) - hd_6.AcquiredOTPositions.Time(1) ...
            ~= hd_6.AcquiredData.Time(end) - hd_6.AcquiredData.Time(1))
        if i6 == 1
            longestTimeStamps = hd_6.AcquiredOTPositions.Time ...
                                - hd_6.AcquiredOTPositions.Time(1);
            maxTimeIndex_6 = find((longestTimeStamps - tMin_6)>0);
            t6_1 = hd_6.AcquiredOTPositions.Time(maxTimeIndex_6(1) - 1) ... 
                   - hd_6.AcquiredOTPositions.Time(1);
            t6_2 = hd_6.AcquiredOTPositions.Time(maxTimeIndex_6(1)) ... 
                   - hd_6.AcquiredOTPositions.Time(1);
            hd_6.AcquiredOTPositions.Time = ...
                hd_6.AcquiredOTPositions.Time(1:maxTimeIndex_6(1));
            hd_6.AcquiredOTPositions.Time(end) = tMin_6 ...
                            + hd_6.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_6.AcquiredData.Time ...
                                - hd_6.AcquiredData.Time(1);
            maxTimeIndex_6 = find((longestTimeStamps - tMin_6)>0);
            t6_1 = hd_6.AcquiredData.Time(maxTimeIndex_6(1) - 1) ... 
                   - hd_6.AcquiredData.Time(1);
            t6_2 = hd_6.AcquiredData.Time(maxTimeIndex_6(1)) ... 
                   - hd_6.AcquiredData.Time(1);
            hd_6.AcquiredData.Time = ...
                hd_6.AcquiredData.Time(1:maxTimeIndex_6(1));
            hd_6.AcquiredData.Time(end) = tMin_6 ...
                            + hd_6.AcquiredData.Time(1);
        end
end


if (hd_7.AcquiredOTPositions.Time(end) - hd_7.AcquiredOTPositions.Time(1) ...
            ~= hd_7.AcquiredData.Time(end) - hd_7.AcquiredData.Time(1))
        if i7 == 1
            longestTimeStamps = hd_7.AcquiredOTPositions.Time ...
                                - hd_7.AcquiredOTPositions.Time(1);
            maxTimeIndex_7 = find((longestTimeStamps - tMin_7)>0);
            t7_1 = hd_7.AcquiredOTPositions.Time(maxTimeIndex_7(1) - 1) ... 
                   - hd_7.AcquiredOTPositions.Time(1);
            t7_2 = hd_7.AcquiredOTPositions.Time(maxTimeIndex_7(1)) ... 
                   - hd_7.AcquiredOTPositions.Time(1);
            hd_7.AcquiredOTPositions.Time = ...
                hd_7.AcquiredOTPositions.Time(1:maxTimeIndex_7(1));
            hd_7.AcquiredOTPositions.Time(end) = tMin_7 ...
                            + hd_7.AcquiredOTPositions.Time(1);
        else
            longestTimeStamps = hd_7.AcquiredData.Time ...
                                - hd_7.AcquiredData.Time(1);
            maxTimeIndex_7 = find((longestTimeStamps - tMin_7)>0);
            t7_1 = hd_7.AcquiredData.Time(maxTimeIndex_7(1) - 1) ... 
                   - hd_7.AcquiredData.Time(1);
            t7_2 = hd_7.AcquiredData.Time(maxTimeIndex_7(1)) ... 
                   - hd_7.AcquiredData.Time(1);
            hd_7.AcquiredData.Time = ...
                hd_7.AcquiredData.Time(1:maxTimeIndex_7(1));
            hd_7.AcquiredData.Time(end) = tMin_7 ...
                            + hd_7.AcquiredData.Time(1);
        end
end

%% INTERPOLATE DATAS ACCORDING TO THE TIME CUTS

if i1 == 1
    hd_1.AcquiredOTPositions.Data = ...
                hd_1.AcquiredOTPositions.Data(:,:,1:size(hd_1.AcquiredOTPositions.Time,1));
            
    hd_1.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_1.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_1.AcquiredOTPositions.Data(:,:,end));
            
    hd_1.AcquiredOTPositions.ID = ...
                hd_1.AcquiredOTPositions.ID(:,1:size(hd_1.AcquiredOTPositions.Time,1));
else
    hd_1.AcquiredData.Data = ...
                hd_1.AcquiredData.Data(1:size(hd_1.AcquiredData.Time,1),:);
            
    hd_1.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_1.AcquiredData.Data(end-1,:), ...
                hd_1.AcquiredData.Data(end,:));
end

if i2 == 1
    hd_2.AcquiredOTPositions.Data = ...
                hd_2.AcquiredOTPositions.Data(:,:,1:size(hd_2.AcquiredOTPositions.Time,1));
            
    hd_2.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_2.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_2.AcquiredOTPositions.Data(:,:,end));
            
    hd_2.AcquiredOTPositions.ID = ...
                hd_2.AcquiredOTPositions.ID(:,1:size(hd_2.AcquiredOTPositions.Time,1));
else
    hd_2.AcquiredData.Data = ...
                hd_2.AcquiredData.Data(1:size(hd_2.AcquiredData.Time,1),:);
            
    hd_2.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_2.AcquiredData.Data(end-1,:), ...
                hd_2.AcquiredData.Data(end,:));
end

if i3 == 1
    hd_3.AcquiredOTPositions.Data = ...
                hd_3.AcquiredOTPositions.Data(:,:,1:size(hd_3.AcquiredOTPositions.Time,1));
            
    hd_3.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_3.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_3.AcquiredOTPositions.Data(:,:,end));
            
    hd_3.AcquiredOTPositions.ID = ...
                hd_3.AcquiredOTPositions.ID(:,1:size(hd_3.AcquiredOTPositions.Time,1));
else
    hd_3.AcquiredData.Data = ...
                hd_3.AcquiredData.Data(1:size(hd_3.AcquiredData.Time,1),:);
            
    hd_3.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_3.AcquiredData.Data(end-1,:), ...
                hd_3.AcquiredData.Data(end,:));
end

if i4 == 1
    hd_4.AcquiredOTPositions.Data = ...
                hd_4.AcquiredOTPositions.Data(:,:,1:size(hd_4.AcquiredOTPositions.Time,1));
            
    hd_4.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_4.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_4.AcquiredOTPositions.Data(:,:,end));
            
    hd_4.AcquiredOTPositions.ID = ...
                hd_4.AcquiredOTPositions.ID(:,1:size(hd_4.AcquiredOTPositions.Time,1));
else
    hd_4.AcquiredData.Data = ...
                hd_4.AcquiredData.Data(1:size(hd_4.AcquiredData.Time,1),:);
            
    hd_4.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_4.AcquiredData.Data(end-1,:), ...
                hd_4.AcquiredData.Data(end,:));
end

if i5 == 1
    hd_5.AcquiredOTPositions.Data = ...
                hd_5.AcquiredOTPositions.Data(:,:,1:size(hd_5.AcquiredOTPositions.Time,1));
            
    hd_5.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_5.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_5.AcquiredOTPositions.Data(:,:,end));
            
    hd_5.AcquiredOTPositions.ID = ...
                hd_5.AcquiredOTPositions.ID(:,1:size(hd_5.AcquiredOTPositions.Time,1));
else
    hd_5.AcquiredData.Data = ...
                hd_5.AcquiredData.Data(1:size(hd_5.AcquiredData.Time,1),:);
            
    hd_5.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_5.AcquiredData.Data(end-1,:), ...
                hd_5.AcquiredData.Data(end,:));
end

if i6 == 1
    hd_6.AcquiredOTPositions.Data = ...
                hd_6.AcquiredOTPositions.Data(:,:,1:size(hd_6.AcquiredOTPositions.Time,1));
            
    hd_6.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_6.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_6.AcquiredOTPositions.Data(:,:,end));
            
    hd_6.AcquiredOTPositions.ID = ...
                hd_6.AcquiredOTPositions.ID(:,1:size(hd_6.AcquiredOTPositions.Time,1));
else
    hd_6.AcquiredData.Data = ...
                hd_6.AcquiredData.Data(1:size(hd_6.AcquiredData.Time,1),:);
            
    hd_6.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_6.AcquiredData.Data(end-1,:), ...
                hd_6.AcquiredData.Data(end,:));
end

if i7 == 1
    hd_7.AcquiredOTPositions.Data = ...
                hd_7.AcquiredOTPositions.Data(:,:,1:size(hd_7.AcquiredOTPositions.Time,1));
            
    hd_7.AcquiredOTPositions.Data(:,:,end) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_7.AcquiredOTPositions.Data(:,:,end-1), ...
                hd_7.AcquiredOTPositions.Data(:,:,end));
            
    hd_7.AcquiredOTPositions.ID = ...
                hd_7.AcquiredOTPositions.ID(:,1:size(hd_7.AcquiredOTPositions.Time,1));
else
    hd_7.AcquiredData.Data = ...
                hd_7.AcquiredData.Data(1:size(hd_7.AcquiredData.Time,1),:);
            
    hd_7.AcquiredData.Data(end,:) = interpolateData(t1_1, t2_2, tMin_1, ...
                hd_7.AcquiredData.Data(end-1,:), ...
                hd_7.AcquiredData.Data(end,:));
end

%% ASSEMBLE DATAS FROM SEVERAL BATCHES

%temp_Measures.Data = hd.AcquiredData.Data;
temp_Measures.Data = cat(1, hd_1.AcquiredData.Data, ...
                                       hd_2.AcquiredData.Data(2:end,:), ...
                                       hd_3.AcquiredData.Data(2:end,:), ...
                                       hd_4.AcquiredData.Data(2:end,:), ...
                                       hd_5.AcquiredData.Data(2:end,:), ...
                                       hd_6.AcquiredData.Data(2:end,:), ...
                                       hd_7.AcquiredData.Data(2:end,:));
                                   
%temp_Measures.Time = hd.AcquiredData.Time - hd.AcquiredData.Time(1);
temp_Measures.Time = cat(2, hd_1.AcquiredData.Time ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_2.AcquiredData.Time(2:end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_3.AcquiredData.Time(2:end) ...
                            - hd_3.AcquiredData.Time(1) ...
                            + hd_2.AcquiredData.Time(end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_4.AcquiredData.Time(2:end) ...
                            - hd_4.AcquiredData.Time(1) ...    
                            + hd_3.AcquiredData.Time(end) ...
                            - hd_3.AcquiredData.Time(1) ...
                            + hd_2.AcquiredData.Time(end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_5.AcquiredData.Time(2:end) ...
                            - hd_5.AcquiredData.Time(1) ...  
                            + hd_4.AcquiredData.Time(end) ...
                            - hd_4.AcquiredData.Time(1) ...    
                            + hd_3.AcquiredData.Time(end) ...
                            - hd_3.AcquiredData.Time(1) ...
                            + hd_2.AcquiredData.Time(end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_6.AcquiredData.Time(2:end) ...
                            - hd_6.AcquiredData.Time(1) ...  
                            + hd_5.AcquiredData.Time(end) ...
                            - hd_5.AcquiredData.Time(1) ...  
                            + hd_4.AcquiredData.Time(end) ...
                            - hd_4.AcquiredData.Time(1) ...    
                            + hd_3.AcquiredData.Time(end) ...
                            - hd_3.AcquiredData.Time(1) ...
                            + hd_2.AcquiredData.Time(end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1), ... %
                            hd_7.AcquiredData.Time(2:end) ...
                            - hd_7.AcquiredData.Time(1) ...      
                            + hd_6.AcquiredData.Time(end) ...
                            - hd_6.AcquiredData.Time(1) ...  
                            + hd_5.AcquiredData.Time(end) ...
                            - hd_5.AcquiredData.Time(1) ...  
                            + hd_4.AcquiredData.Time(end) ...
                            - hd_4.AcquiredData.Time(1) ...    
                            + hd_3.AcquiredData.Time(end) ...
                            - hd_3.AcquiredData.Time(1) ...
                            + hd_2.AcquiredData.Time(end) ...
                            - hd_2.AcquiredData.Time(1) ...
                            + hd_1.AcquiredData.Time(end) ...
                            - hd_1.AcquiredData.Time(1));
                     
P2_Measures.AcquiredData.StartTime = datetime(hd_1.AcquiredData.StartTime, ...
                                     'ConvertFrom','datenum', ...
                                     'Format', 'yyyy-MM-dd HH:mm:ss.SSS');%hd.AcquiredData.StartTime;
                   
P2_Measures.AcquiredData.Time = P2_Measures.AcquiredData.StartTime ...
                                + seconds(temp_Measures.Time);%hd.AcquiredData.dateTimeSeries;
                                
                            
P2_Measures.AcquiredOTPositions.Data = 1000.0 ...
                                * cat(3, hd_1.AcquiredOTPositions.Data, ...
                                hd_2.AcquiredOTPositions.Data(:,:,1:end), ...
                                hd_3.AcquiredOTPositions.Data(:,:,1:end), ...
                                hd_4.AcquiredOTPositions.Data(:,:,1:end), ...
                                hd_5.AcquiredOTPositions.Data(:,:,1:end), ...
                                hd_6.AcquiredOTPositions.Data(:,:,1:end), ...
                                hd_7.AcquiredOTPositions.Data(:,:,1:end));

P2_Measures.AcquiredOTPositions.ID = cat(2, squeeze(hd_1.AcquiredOTPositions.ID), ...
                                           squeeze(hd_2.AcquiredOTPositions.ID(:,1:end)), ...
                                           squeeze(hd_3.AcquiredOTPositions.ID(:,1:end)), ...
                                           squeeze(hd_4.AcquiredOTPositions.ID(:,1:end)), ...
                                           squeeze(hd_5.AcquiredOTPositions.ID(:,1:end)), ...
                                           squeeze(hd_6.AcquiredOTPositions.ID(:,1:end)), ...
                                           squeeze(hd_7.AcquiredOTPositions.ID(:,1:end)));

% P2_Measures.AcquiredOTPositions.Time = cat(1, hd_1.AcquiredOTPositions.Time ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_2.AcquiredOTPositions.Time(2:end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_3.AcquiredOTPositions.Time(2:end) ...
%                             - hd_3.AcquiredOTPositions.Time(1) ...
%                             + hd_2.AcquiredOTPositions.Time(end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_4.AcquiredOTPositions.Time(2:end) ...
%                             - hd_4.AcquiredOTPositions.Time(1) ...    
%                             + hd_3.AcquiredOTPositions.Time(end) ...
%                             - hd_3.AcquiredOTPositions.Time(1) ...
%                             + hd_2.AcquiredOTPositions.Time(end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_5.AcquiredOTPositions.Time(2:end) ...
%                             - hd_5.AcquiredOTPositions.Time(1) ...  
%                             + hd_4.AcquiredOTPositions.Time(end) ...
%                             - hd_4.AcquiredOTPositions.Time(1) ...    
%                             + hd_3.AcquiredOTPositions.Time(end) ...
%                             - hd_3.AcquiredOTPositions.Time(1) ...
%                             + hd_2.AcquiredOTPositions.Time(end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_6.AcquiredOTPositions.Time(2:end) ...
%                             - hd_6.AcquiredOTPositions.Time(1) ...  
%                             + hd_5.AcquiredOTPositions.Time(end) ...
%                             - hd_5.AcquiredOTPositions.Time(1) ...  
%                             + hd_4.AcquiredOTPositions.Time(end) ...
%                             - hd_4.AcquiredOTPositions.Time(1) ...    
%                             + hd_3.AcquiredOTPositions.Time(end) ...
%                             - hd_3.AcquiredOTPositions.Time(1) ...
%                             + hd_2.AcquiredOTPositions.Time(end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1), ... %
%                             hd_7.AcquiredOTPositions.Time(2:end) ...
%                             - hd_7.AcquiredOTPositions.Time(1) ...      
%                             + hd_6.AcquiredOTPositions.Time(end) ...
%                             - hd_6.AcquiredOTPositions.Time(1) ...  
%                             + hd_5.AcquiredOTPositions.Time(end) ...
%                             - hd_5.AcquiredOTPositions.Time(1) ...  
%                             + hd_4.AcquiredOTPositions.Time(end) ...
%                             - hd_4.AcquiredOTPositions.Time(1) ...    
%                             + hd_3.AcquiredOTPositions.Time(end) ...
%                             - hd_3.AcquiredOTPositions.Time(1) ...
%                             + hd_2.AcquiredOTPositions.Time(end) ...
%                             - hd_2.AcquiredOTPositions.Time(1) ...
%                             + hd_1.AcquiredOTPositions.Time(end) ...
%                             - hd_1.AcquiredOTPositions.Time(1));
%                                        
% P2_Measures.AcquiredOTPositions.Time = P2_Measures.AcquiredData.StartTime ...
%                                 + seconds(P2_Measures.AcquiredOTPositions.Time);

P2_Measures.AcquiredOTPositions.Time = [P2_Measures.AcquiredOTPositions.Time;...
                                    datetime(hd_1.AcquiredOTPositions.StartTime, ...
                                    'ConvertFrom','datenum', ...
                                    'Format', 'yyyy-MM-dd HH:mm:ss.SSS')];
                                
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_1.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_1.AcquiredOTPositions.Time(1)));
    
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_2.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_2.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_2.AcquiredOTPositions.Time(1)));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_3.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_3.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_3.AcquiredOTPositions.Time(1)));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_4.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_4.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_4.AcquiredOTPositions.Time(1)));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_5.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_5.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_5.AcquiredOTPositions.Time(1)));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_6.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_6.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_6.AcquiredOTPositions.Time(1)));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            datetime(hd_7.AcquiredOTPositions.StartTime, ...
                            'ConvertFrom','datenum', ...
                            'Format', 'yyyy-MM-dd HH:mm:ss.SSS'));
                        
P2_Measures.AcquiredOTPositions.Time = cat(1,P2_Measures.AcquiredOTPositions.Time, ...
                            seconds(hd_7.AcquiredOTPositions.Time(2:end))...
                            + P2_Measures.AcquiredOTPositions.Time(end)...
                            - seconds(hd_7.AcquiredOTPositions.Time(1)));

P2_Measures.AcquiredOTPositions.Time = P2_Measures.AcquiredOTPositions.Time - seconds(2.33);
                            
P2_Measures.TimeLine = cat(1, hd_1.TimeLine, hd_2.TimeLine, hd_3.TimeLine, ...
                            hd_4.TimeLine, hd_5.TimeLine, hd_6.TimeLine, hd_7.TimeLine); 

P2_Measures.TimeLine = datetime(P2_Measures.TimeLine, ...
                                'Format', 'yyyy-MM-dd HH:mm:ss.SSS');
                            
%% APPLY PROPER SENSITIVITY VALUES

forceMIN = min(temp_Measures.Data(:,1));
dispMAX = max(temp_Measures.Data(:,2));
disp_LVDT_1_MIN = min(temp_Measures.Data(:,3));
disp_LVDT_2_MIN = min(temp_Measures.Data(:,4));
disp_LVDT_3_MIN = min(temp_Measures.Data(:,5));

forceSignal = (temp_Measures.Data(:,1) - forceMIN); %* forceS;
dispSignal = -(temp_Measures.Data(:,2) - dispMAX); %* dispS;
LVDT_1 = (temp_Measures.Data(:,3) - disp_LVDT_1_MIN) * LVDT_Supports_S;
LVDT_2 = (temp_Measures.Data(:,4) - disp_LVDT_2_MIN) * LVDT_MidSpan_S;
LVDT_3 = (temp_Measures.Data(:,5) - disp_LVDT_3_MIN) * LVDT_Supports_S;

P2_Measures.AcquiredData.Data = [forceSignal, dispSignal, LVDT_1, LVDT_2, LVDT_3];% temp_Measures.Data(:,6:end)];
                     
%% FILTER NON-INTERPOLATED SIGNALS

% TEST WITH GAUSSIAN FILTER
f1 = 3000;
w1 = gausswin(f1); %environ la fréquence d'acquisition
w1 = w1./sum(w1);

f2 = 30;
w2 = gausswin(f2); %environ la fréquence d'acquisition
w2 = w2./sum(w2);
% TEST WITH MOVING AVERAGE FILTERS
%movAvgFilter = 1/filterSpan * ones(filterSpan,1);
%delay_1 = floor(mean(grpdelay(movAvgFilter))); %Flooring is required for delay calibration
delay_1 = round(mean(grpdelay(w1)));

%movAvgFilter_2 = 1/filterSpan_2 * ones(filterSpan_2,1);
%delay_2 = floor(mean(grpdelay(movAvgFilter_2))); %Flooring is required for delay calibration
delay_2 = round(mean(grpdelay(w2)));

nbrOfSignals = size(P2_Measures.AcquiredData.Data, 2);
nbrOfMarkers = size(P2_Measures.AcquiredOTPositions.Data, 1);
            
P2_Measures.AcquiredData.FilteredData = filter(w1, 1, ...
               P2_Measures.AcquiredData.Data);

P2_Measures.AcquiredData.FilteredData(1:f1,:) = [];

P2_Measures.AcquiredData.Data = ...
                   P2_Measures.AcquiredData.Data(delay_1+1:end-delay_1,:);

P2_Measures.AcquiredData.Time = ...
                   P2_Measures.AcquiredData.Time(:,delay_1+1:end-delay_1);
            
P2_Measures.AcquiredOTPositions.FilteredData = filter(w2, 1, ...
                P2_Measures.AcquiredOTPositions.Data, [], 3);

P2_Measures.AcquiredOTPositions.FilteredData(:,:,1:f2) = [];

P2_Measures.AcquiredOTPositions.Data = ...
                   P2_Measures.AcquiredOTPositions.Data(:,:,delay_2+1:end-delay_2);

P2_Measures.AcquiredOTPositions.Time = ...
                   P2_Measures.AcquiredOTPositions.Time(delay_2+1:end-delay_2);
               
P2_Measures.AcquiredOTPositions.ID = ...
                   P2_Measures.AcquiredOTPositions.ID(:,delay_2+1:end-delay_2);

%% INTERPOLATE NON-FILTERED DATAS

%Using the interp1 function does not work on the timeline obtained directly
%because the timeline is not continuous. Plot the basic timelines to better
%understand.

Fr = 1; %Data frequency
P2_Measures.CommonTimeLine = P2_Measures.AcquiredData.Time(1):seconds(1/Fr):P2_Measures.AcquiredData.Time(end);

P2_Measures.AcquiredData.InterpData = ...
        interp1(P2_Measures.AcquiredData.Time(1:1:end).', ... %Supposing a frequency acquisition of 1Hz.
        P2_Measures.AcquiredData.Data(1:1:end,:), ...
        P2_Measures.CommonTimeLine);

R = reshape(P2_Measures.AcquiredOTPositions.Data(:,:,1:10:end), ...
        size(P2_Measures.AcquiredOTPositions.Data(:,:,1:10:end),1) ...
        * size(P2_Measures.AcquiredOTPositions.Data(:,:,1:10:end),2), []);

P2_Measures.AcquiredOTPositions.InterpData = ...
        interp1(P2_Measures.AcquiredOTPositions.Time(1:10:end), ... %Supposing a frequency acquisition of 30Hz
        R.', ...
        P2_Measures.CommonTimeLine);
    
P2_Measures.AcquiredOTPositions.InterpData = ...
        reshape(P2_Measures.AcquiredOTPositions.InterpData.', ...
        size(P2_Measures.AcquiredOTPositions.Data,1), ...
        size(P2_Measures.AcquiredOTPositions.Data,2),[]);

%% INTERPOLATE FILTERED DATAS

%Using the interp1 function does not work on the timeline obtained directly
%because the timeline is not continuous. Plot the basic timelines to better
%understand.

% Fr = 2; %Data frequency
% P2_Measures.CommonTimeLine = P2_Measures.AcquiredData.Time(1):seconds(1/Fr):P2_Measures.AcquiredData.Time(end); 

P2_Measures.AcquiredData.InterpFilteredData = ...
        interp1(P2_Measures.AcquiredData.Time(1:800:end).', ... %Supposing a frequency acquisition of 800Hz
        P2_Measures.AcquiredData.FilteredData(1:800:end,:), ...
        P2_Measures.CommonTimeLine);

R = reshape(P2_Measures.AcquiredOTPositions.FilteredData(:,:,1:10:end), ...
        size(P2_Measures.AcquiredOTPositions.FilteredData(:,:,1:10:end),1) ...
        * size(P2_Measures.AcquiredOTPositions.FilteredData(:,:,1:10:end),2), []);

P2_Measures.AcquiredOTPositions.InterpFilteredData = ...
        interp1(P2_Measures.AcquiredOTPositions.Time(1:10:end), ... %Supposing a frequency acquisition of 30Hz
        R.', ...
        P2_Measures.CommonTimeLine);
    
P2_Measures.AcquiredOTPositions.InterpFilteredData = ...
        reshape(P2_Measures.AcquiredOTPositions.InterpFilteredData.', ...
        size(P2_Measures.AcquiredOTPositions.FilteredData,1), ...
        size(P2_Measures.AcquiredOTPositions.FilteredData,2),[]);

P2_Measures.AcquiredOTPositions.ID = double(P2_Measures.AcquiredOTPositions.ID);

Rid = P2_Measures.AcquiredOTPositions.ID(:,1:10:end);
    
P2_Measures.AcquiredOTPositions.InterpID = ...
        interp1(P2_Measures.AcquiredOTPositions.Time(1:10:end), ... %Supposing a frequency acquisition of 30Hz
        Rid.', ...
        P2_Measures.CommonTimeLine);
    
P2_Measures.AcquiredOTPositions.InterpID = P2_Measures.AcquiredOTPositions.InterpID.';
    
%% USEFUL FUNCTION

% Interpolating function
function [interpData] = interpolateData(t1, t2, tD, D1, D2)
    interpData = D1 + (tD - t1)/(t2 - t1) * D2;
end
