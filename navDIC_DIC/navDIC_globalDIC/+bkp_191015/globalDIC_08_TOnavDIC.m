%% ASK THE USER IF THE PROCESS HAS BEEN STOPPED MANUALLY

    if stopBtn.Value
        answer = questdlg({'PROCESS STOPPED BEFORE COMPLETION.', 'EXPORT THE RESULTS TO navDIC ?'},'/!\ WARNING','Yes','No','No') ;
        if isempty(answer) || strcmp(answer,'No') ; return ; end
    end
    

%% SEND THE RESULT TO navDIC
    hd.Seeds(seedNumber).MovingPoints = interpn(...
                                            repmat((1:nNodes)',[1 2 nFrames]),...
                                            repmat(1:2,[nNodes 1 nFrames]),...
                                            repmat(reshape(frames,[1 1 nFrames]),[nNodes 2 1]),...
                                            Xn,...
                                            repmat((1:nNodes)',[1 2 hd.nFrames]),...
                                            repmat(1:2,[nNodes 1 hd.nFrames]),...
                                            repmat(reshape(navDICFrames,[1 1 hd.nFrames]),[nNodes 2 1]),...
                                        'linear',NaN) ;
    hd.Seeds(seedNumber).Displacements = interpn(...
                                            repmat((1:nNodes)',[1 2 nFrames]),...
                                            repmat(1:2,[nNodes 1 nFrames]),...
                                            repmat(reshape(frames,[1 1 nFrames]),[nNodes 2 1]),...
                                            Un,...
                                            repmat((1:nNodes)',[1 2 hd.nFrames]),...
                                            repmat(1:2,[nNodes 1 hd.nFrames]),...
                                            repmat(reshape(navDICFrames,[1 1 hd.nFrames]),[nNodes 2 1]),...
                                        'linear',NaN) ;
    hd.Seeds(seedNumber).Strains = interpn(...
                                            repmat((1:size(Strains,1))',[1 3 nFrames]),...
                                            repmat(1:3,[size(Strains,1) 1 nFrames]),...
                                            repmat(reshape(frames,[1 1 nFrames]),[size(Strains,1) 3 1]),...
                                            Strains,...
                                            repmat((1:size(Strains,1))',[1 3 hd.nFrames]),...
                                            repmat(1:3,[size(Strains,1) 1 hd.nFrames]),...
                                            repmat(reshape(navDICFrames,[1 1 hd.nFrames]),[size(Strains,1) 3 1]),...
                                        'linear',NaN) ;
                                    
%% IF ASKED FOR, COMPUTE AVERAGE STRAIN ON NODES

    if strainOnNodes
        meanOnNodes = sparse(1:nNodes,1:nNodes,1./sum(tri2nod,2))*tri2nod ;
        hd.Seeds(seedNumber).Strains = reshape(meanOnNodes*reshape(hd.Seeds(seedNumber).Strains,nElems,[]),[nNodes 3 hd.nFrames]);
    end
        
        
%% MAJOR STRAINS COMPUTATION

    aaa = 1/2*(hd.Seeds(seedNumber).Strains(:,1,:)+hd.Seeds(seedNumber).Strains(:,2,:)) ;
    bbb = sqrt(1/4*(hd.Seeds(seedNumber).Strains(:,1,:)-hd.Seeds(seedNumber).Strains(:,2,:)).^2 + hd.Seeds(seedNumber).Strains(:,3,:).^2) ;
    hd.Seeds(seedNumber).MajorStrains = aaa+bbb ;
    hd.Seeds(seedNumber).MinorStrains = aaa-bbb ;
    hd.Seeds(seedNumber).MaxShear = bbb ;
    hd.Seeds(seedNumber).PrincipalAngle = 1/2*atan(2*hd.Seeds(seedNumber).Strains(:,3,:)./(hd.Seeds(seedNumber).Strains(:,1,:)-hd.Seeds(seedNumber).Strains(:,2,:))) ;
    
    
                                    